---
import type { CollectionEntry } from 'astro:content'
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import BaseLayout from './BaseLayout.astro'
import FormattedDate from '../components/FormattedDate.astro'
import { Image } from 'astro:assets'
import LatestPosts from '@components/LatestPosts.astro'
import Toc from '@/components/Toc.astro'
import Tags from '@/components/Tags.astro'
import { Calendar, Dot } from 'lucide-react'
import { VCenterRow } from '@/components/layout/v-center-row'
import { TableOfContents } from '@/components/toc'
import { ContentDiv } from '@/components/layout/content-div'

type Props = CollectionEntry<'blog'>['data'] & {
  slug: string
  minutesRead: string
  lastModified: Date
  headings: {
    depth: number
    slug: string
    text: string
  }[]
}

const {
  title,
  description,
  added,
  //updatedDate,
  heroImage,
  slug,
  minutesRead,
  lastModified,
  tags,
  headings,
} = Astro.props

const ogImage = `/og/${slug}.png`
---

<BaseLayout title={title} description={description}>
  <Fragment slot="head">
    <meta property="og:image" content={ogImage} />
  </Fragment>

  <!-- <Header slot="header" /> -->
  <ContentDiv slot="main">
    <main class="grid grid-cols-4 gap-4">
      <article class="col-span-3 flex flex-col gap-y-4">
        <header class="flex flex-col gap-y-2">
          <div class="hero-image">
            {
              heroImage && (
                <Image width={1020} height={510} src={heroImage} alt="" />
              )
            }
          </div>

          <h1>
            {title}
          </h1>
          <VCenterRow className="text-foreground/50 gap-x-2">
            <VCenterRow className="gap-x-2">
              <Calendar
                className="stroke-foreground/40 w-5"
                strokeWidth={1.5}
              />
              <FormattedDate date={added} />
            </VCenterRow>
            <span class="bg-foreground/30 aspect-square h-2 w-2 rounded-full"
            ></span>
            <p>{minutesRead}</p>
          </VCenterRow>

          {
            lastModified && lastModified !== added && (
              <p class="text-foreground/50">
                Last updated on <FormattedDate date={lastModified} />
              </p>
            )
          }

          <Tags tags={tags} />
        </header>
        <slot />
      </article>

      <aside class="col-span-1">
        <div class="sticky top-20">
          <!-- <Toc headings={Astro.props.headings} /> -->
          <TableOfContents client:only="react" />
          <LatestPosts />
        </div>
      </aside>
    </main></ContentDiv
  >

  <Footer slot="footer" />
</BaseLayout>
