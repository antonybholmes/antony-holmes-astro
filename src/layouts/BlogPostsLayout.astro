---
import type { IPaginationProps } from '@/lib/paginate'
import type { IPost } from '@/lib/post'
import { PostsPage } from '@components/posts/posts-page'
import ContentLayout from '@layouts/ContentLayout.astro'

import type { CollectionEntry } from 'astro:content'
import BaseLayout from './BaseLayout.astro'
import { createCrumbs, type ICrumbProps } from '@/lib/crumbs'
import ContentDiv from '@/components/layout/ContentDiv.astro'
import { Breadcrumb } from '@/components/breadcrumb'
import { PageTitle } from '@/components/page-title'
import { BaseCol } from '@/components/layout/base-col'

interface Props
  extends Omit<IPaginationProps<CollectionEntry<'blog'>>, 'type'>,
    ICrumbProps {
  title: string
  pageTitle?: string

  // the root without page numbers etc added to it
  // e.g. /blog/tag/javascript/ instead of /blog/tag/javascript/page/2
  // this is used to generate the correct links for pagination
  // and for the "back to section" link
  // this is useful for SEO and readability
  root: string
  showTitle?: boolean
  showSectionLinks?: boolean
}

let {
  title,
  pageTitle,
  showTitle,
  crumbs,
  showCrumbs = true,
  page,
  pages,
  data,
  root,
  showSectionLinks = false,
} = Astro.props

if (!crumbs) {
  crumbs = createCrumbs(Astro.url.pathname)
}
---

<BaseLayout title={pageTitle ?? title} tab="Blog">
  <Fragment slot="main">
    <>
      {
        (showTitle || showCrumbs) && (
          <ContentDiv className="pt-8 pb-16">
            <BaseCol className="gap-y-4" slot="main">
              {showCrumbs && crumbs && <Breadcrumb crumbs={crumbs} />}
              {showTitle && <PageTitle title={title} />}
            </BaseCol>
          </ContentDiv>
        )
      }
    </>
    <slot name="main" />
  </Fragment>

  <PostsPage
    posts={data as IPost[]}
    page={page}
    pages={pages}
    root={root}
    showSectionLinks={showSectionLinks}
    slot="main"
  />
</BaseLayout>
