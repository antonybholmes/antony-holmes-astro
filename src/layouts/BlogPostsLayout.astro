---
import type { IPageProps } from '@/lib/paginate'
import type { IPost } from '@/lib/post'

import { Breadcrumb } from '@/components/breadcrumb'
import { BaseCol } from '@/components/layout/base-col'
import ContentDiv from '@/components/layout/ContentDiv.astro'
import { PagePagination } from '@/components/page-pagination'
import { PageTitle } from '@/components/page-title'
import { FeaturedPosts } from '@/components/posts/featured-posts'
import { HeadPosts } from '@/components/posts/head-posts'
import { HeroPosts } from '@/components/posts/hero-posts'
import { RestPosts } from '@/components/posts/rest-posts'
import type { ColorMode } from '@/interfaces/color-mode'
import { createCrumbs, type ICrumbProps } from '@/lib/crumbs'
import type { CollectionEntry } from 'astro:content'
import BaseLayout from './BaseLayout.astro'
import { FeaturedPost } from '@/components/posts/featured-post'

interface Props extends IPageProps, ICrumbProps {
  title: string
  pageTitle?: string
  mode?: ColorMode
  posts: CollectionEntry<'blog'>[]
  featuredPosts?: CollectionEntry<'blog'>[]
  // the root without page numbers etc added to it
  // e.g. /blog/tag/javascript/ instead of /blog/tag/javascript/page/2
  // this is used to generate the correct links for pagination
  // and for the "back to section" link
  // this is useful for SEO and readability
  root: string
  showTitle?: boolean
  showSectionLinks?: boolean
}

let {
  title,
  pageTitle,
  showTitle,
  crumbs,

  posts,
  featuredPosts = [],
  page,
  pages,

  root,
  showSectionLinks = false,
  mode = 'light',
} = Astro.props

if (!crumbs) {
  crumbs = createCrumbs(Astro.url.pathname)
}

const headPostStart = page === 0 ? 4 : 0
---

<BaseLayout title={pageTitle ?? title} tab="Blog">
  <Fragment slot="main">
    <>
      {
        (showTitle || crumbs) && (
          <ContentDiv className="py-8 mb-8 data-[mode=dark]:bg-gradient-to-br data-[mode=dark]:from-gray-900 data-[mode=dark]:to-gray-700">
            <BaseCol className="gap-y-4" slot="main">
              {crumbs && <Breadcrumb crumbs={crumbs} />}
              {showTitle && <PageTitle title={title} />}
            </BaseCol>
          </ContentDiv>
        )
      }
    </>
    <ContentDiv>
      <main slot="main" class="flex flex-col gap-y-16">
        {
          featuredPosts.length > 0 && (
            <section id="featured">
              {/* <h2 class="border-border mb-8 border-b py-2 text-2xl font-bold">
                Featured
              </h2> */}

              {/* <FeaturedPosts
                posts={featuredPosts as IPost[]}
                showSectionLinks={showSectionLinks}
              /> */}

              <FeaturedPost
                post={featuredPosts[0]! as IPost}
                showSectionLinks={showSectionLinks}
                mode={mode}
              />
            </section>
          )
        }

        <section id="latest" class="flex flex-col gap-y-8">
          <!-- <h2 class="border-border border-b py-2 text-2xl font-bold">
            {title === 'Latest' ? 'Posts' : 'Latest'}
          </h2> -->

          <BaseCol className="gap-y-24">
            {
              page === 0 && (
                <HeroPosts
                  posts={posts as IPost[]}
                  showSectionLinks={showSectionLinks}
                />
              )
            }

            <HeadPosts
              posts={posts.slice(headPostStart, headPostStart + 2) as IPost[]}
              showSectionLinks={showSectionLinks}
            />

            <RestPosts
              posts={posts.slice(headPostStart + 2) as IPost[]}
              showSectionLinks={showSectionLinks}
            />

            <PagePagination page={page} pages={pages} root={root} />
          </BaseCol>
        </section>
      </main>
    </ContentDiv>

    <!-- <PostsPage
      posts={data as IPost[]}
      page={page}
      pages={pages}
      root={root}
      showSectionLinks={showSectionLinks}
    /> -->
  </Fragment>
</BaseLayout>
