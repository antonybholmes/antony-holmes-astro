---
import BlogPostsLayout from '@/layouts/BlogPostsLayout.astro'
import { getTagPostMap } from '@/lib/astro/tags'
import { getUrlFriendlyTag } from '@/lib/http/urls'
import { getSortedPosts } from '@lib/astro/post'
import { paginate } from '@lib/paginate'

import { getTagBaseUrl } from '@lib/urls'
import type { CollectionEntry } from 'astro:content'

export async function getStaticPaths() {
  const allPosts = await getSortedPosts()

  const tagMap = getTagPostMap(allPosts)

  let paths: {
    params: { slug?: string }
    props: {
      title: string
      pageTitle: string
      showTitle: boolean
      root: string
      page: number
      pages: number
      data: CollectionEntry<'blog'>[]
    }
  }[] = []

  for (const [tag, posts] of tagMap.entries()) {
    paths = paths.concat(
      paginate(posts, getUrlFriendlyTag(tag)).map(p => ({
        ...p,
        props: {
          ...p.props,
          title: tag,
          pageTitle: `${tag}  - Page ${p.props.page + 1} of ${p.props.pages}`,
          showTitle: true,

          root: getTagBaseUrl(tag),
        },
      }))
    )
  }

  return paths
}

const { title, pageTitle, page, root, pages, data } = Astro.props
---

<BlogPostsLayout
  title={title}
  pageTitle={pageTitle}
  page={page}
  pages={pages}
  posts={data}
  root={root}
  showTitle={true}
/>
